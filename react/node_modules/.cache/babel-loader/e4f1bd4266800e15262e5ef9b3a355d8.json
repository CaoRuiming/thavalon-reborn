{"ast":null,"code":"import _classCallCheck from \"/Users/grace/thavalon-reborn/public/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/grace/thavalon-reborn/public/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/grace/thavalon-reborn/public/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/grace/thavalon-reborn/public/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/grace/thavalon-reborn/public/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/grace/thavalon-reborn/public/src/Options.js\";\nimport React, { Component } from 'react';\nimport './css/App.css';\nimport './css/Options.css';\n/**\n * Models the options window, which toggles the role options for the name. Requires three props:\n * a submit function, an options array, and a onChange function which will be mapped to each\n * checkbox.\n */\n\nvar Options =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Options, _Component);\n\n  function Options() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Options);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Options)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (key) {\n      _this.props.handleChange(key);\n    };\n\n    return _this;\n  }\n\n  _createClass(Options, [{\n    key: \"render\",\n    value: function render() {\n      var count = 0;\n      return React.createElement(\"div\", {\n        className: \"options_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"option_form\",\n        onSubmit: this.props.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"checks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.options.map(function (element) {\n        count++;\n        return React.createElement(\"div\", {\n          key: count,\n          className: \"option_ele\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"check slider\",\n          type: \"checkbox\",\n          defaultChecked: element.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), element.key));\n      })), React.createElement(\"input\", {\n        className: \"options_submit\",\n        type: \"submit\",\n        value: \"Done\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Options;\n}(Component);\n\nexport default Options;","map":{"version":3,"sources":["/Users/grace/thavalon-reborn/public/src/Options.js"],"names":["React","Component","Options","handleChange","key","props","count","submit","options","map","element","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAGA;;;;;;IAKMC,O;;;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,UAACC,GAAD,EAAS;AACpB,YAAKC,KAAL,CAAWF,YAAX,CAAwBC,GAAxB;AACH,K;;;;;;;6BAEQ;AACL,UAAIE,KAAK,GAAG,CAAZ;AACA,aAAQ;AAAK,QAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAE,aAAjB;AAAgC,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuB,UAAUC,OAAV,EAAmB;AACvCJ,QAAAA,KAAK;AACT,eAAQ;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAiB,UAAA,SAAS,EAAE,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACT;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,SAAS,EAAE,cAAlB;AAAkC,UAAA,IAAI,EAAE,UAAxC;AAAoD,UAAA,cAAc,EAAEI,OAAO,CAACC,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEKD,OAAO,CAACN,GAFb,CADS,CAAR;AAMH,OARI,CADL,CADJ,EAYI;AAAO,QAAA,SAAS,EAAE,gBAAlB;AAAoC,QAAA,IAAI,EAAE,QAA1C;AAAoD,QAAA,KAAK,EAAE,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADA,CAAR;AAkBH;;;;EA1BiBH,S;;AA6BtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './css/App.css';\nimport './css/Options.css';\n\n\n/**\n * Models the options window, which toggles the role options for the name. Requires three props:\n * a submit function, an options array, and a onChange function which will be mapped to each\n * checkbox.\n */\nclass Options extends Component {\n\n    handleChange = (key) => {\n        this.props.handleChange(key);\n    };\n\n    render() {\n        let count = 0;\n        return (<div className={\"options_wrapper\"}>\n                <form className={\"option_form\"} onSubmit={this.props.submit}>\n                    <div className={\"checks\"}>\n                        {this.props.options.map(function (element) {\n                            count++;\n                        return (<div key={count} className={\"option_ele\"}>\n                       <label className=\"label\">\n                           <input className={\"check slider\"} type={\"checkbox\"} defaultChecked={element.value}/>\n                           {element.key}\n                       </label>\n                        </div>);\n                    })}\n                    </div>\n                    <input className={\"options_submit\"} type={\"submit\"} value={\"Done\"}/>\n                </form>\n            </div>\n\n        );\n    }\n}\n\nexport default Options;"]},"metadata":{},"sourceType":"module"}